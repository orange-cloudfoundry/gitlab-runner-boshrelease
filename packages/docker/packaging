set -eu

# Detect # of CPUs so make jobs can be parallelized
CPUS=`grep -c ^processor /proc/cpuinfo`

AUTOCONF_PACKAGE=autoconf
AUTOCONF_VERSION="2.69"
echo "Extracting Autoconf ${AUTOCONF_VERSION}..."
tar xzvf ${BOSH_COMPILE_TARGET}/docker/${AUTOCONF_PACKAGE}-${AUTOCONF_VERSION}.tar.gz
if [[ $? != 0 ]] ; then
  echo "Failed extracting Autoconf ${AUTOCONF_VERSION}"
  exit 1
fi

BRIDGE_UTILS_PACKAGE="bridge-utils"
BRIDGE_UTILS_VERSION="1.5"
echo "Extracting bridge-utils ${BRIDGE_UTILS_VERSION}..."
tar xzvf ${BOSH_COMPILE_TARGET}/docker/${BRIDGE_UTILS_PACKAGE}-${BRIDGE_UTILS_VERSION}.tar.gz
if [[ $? != 0 ]] ; then
  echo "Failed extracting bridge-utils ${BRIDGE_UTILS_VERSION}"
  exit 1
fi

AUFS_TOOLS_PACKAGE="aufs-tools"
AUFS_TOOLS_VERSION="20120411"
echo "Copying aufs-tools ${AUFS_TOOLS_VERSION}..."
cp -a ${BOSH_COMPILE_TARGET}/docker/${AUFS_TOOLS_PACKAGE}_${AUFS_TOOLS_VERSION}-3_amd64.deb ${BOSH_INSTALL_TARGET}/

# Build Autoconf package
echo "Building Autoconf ${AUTOCONF_VERSION}..."
cd ${BOSH_COMPILE_TARGET}/${AUTOCONF_PACKAGE}-${AUTOCONF_VERSION}
./configure
make -j${CPUS}
make install

# Build bridge-utils package
echo "Building bridge-utils ${BRIDGE_UTILS_VERSION}..."
cd ${BOSH_COMPILE_TARGET}/bridge-utils-${BRIDGE_UTILS_VERSION}
autoconf
./configure --prefix=${BOSH_INSTALL_TARGET}
make -j${CPUS}
make install

# Extract docker package
DOCKER_PACKAGE=docker
echo "Extracting docker ..."
tar xzvf ${BOSH_COMPILE_TARGET}/docker/${DOCKER_PACKAGE}-*.tgz
if [[ $? != 0 ]] ; then
  echo "Failed extracting docker"
  exit 1
fi

echo "Copying docker binaries..."
mkdir -p ${BOSH_INSTALL_TARGET}/bin
cp docker/* ${BOSH_INSTALL_TARGET}/bin
chmod +x ${BOSH_INSTALL_TARGET}/bin/*
