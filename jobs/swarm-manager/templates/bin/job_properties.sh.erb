#!/usr/bin/env bash

#
# Swarm Manager properties
#

# Directory to store the Swarm Manager configuration files
export SWARM_MANAGER_CONF_DIR=${JOB_DIR}/config

# Directory to store the Swarm Manager logs
export SWARM_MANAGER_LOG_DIR=${LOG_DIR}

# Directory to store the Swarm Manager process IDs
export SWARM_MANAGER_PID_DIR=${RUN_DIR}

# Directory to store the Swarm Manager temp files
export SWARM_MANAGER_TMP_DIR=${TMP_DIR}

# Enable debug mode
export SWARM_MANAGER_DEBUG="--debug=<%= p('debug') %>"

# Log level
export SWARM_MANAGER_LOG_LEVEL="--log-level=<%= p('log_level') %>"

# IP:Port to listen on
export SWARM_MANAGER_HOST="--host=<%= p('listen_address') %>:<%= p('port') %>"

# Placement strategy to use
export SWARM_MANAGER_STRATEGY="--strategy=<%= p('strategy') %>"

# Filters to use
export SWARM_MANAGER_FILTERS="<%= p('filters', []).map { |filter| "--filter=#{filter}" }.join(' ') %>"

# Enable Swarm manager replication
export SWARM_MANAGER_REPLICATION="--replication=<%= p('replication') %>"

# Leader lock release time on failure
export SWARM_MANAGER_REPLICATION_TTL="--replication-ttl=<%= p('replication_ttl') %>"

# Address of the Swarm Manager joining the cluster
export SWARM_MANAGER_ADVERTISE="--advertise=<%= "#{p('advertise', spec.address)}:#{p('port')}" %>"

# Time in second between each heartbeat
export SWARM_MANAGER_HEARTBEAT="--heartbeat=<%= p('heartbeat') %>"

# Enable CORS headers in the remote API
export SWARM_MANAGER_API_ENABLE_CORS="--api-enable-cors=<%= p('api_enable_cors') %>"

# Overcommit to apply on resources
export SWARM_MANAGER_OVERCOMMIT="--cluster-opt=swarm.overcommit=<%= p('overcommit') %>"

# Use TLS
export SWARM_MANAGER_TLS="--tls=true"

# Use TLS and verify the remote
export SWARM_MANAGER_TLS_VERIFY="--tlsverify=true"

# Trust only remotes providing a certificate signed by the CA given here
export SWARM_MANAGER_TLS_CACERT="--tlscacert=${SWARM_MANAGER_CONF_DIR}/docker.cacert"

# Path to TLS certificate file
export SWARM_MANAGER_TLS_CERT="--tlscert=${SWARM_MANAGER_CONF_DIR}/docker.cert"

# Path to TLS key file
export SWARM_MANAGER_TLS_KEY="--tlskey=${SWARM_MANAGER_CONF_DIR}/docker.key"

<% if_p('swarm.discovery_options') do |discovery_options| -%>
# Swarm discovery options
export SWARM_MANAGER_DISCOVERY_OPTIONS="<%= discovery_options.map { |discovery_option| "--discovery-opt=#{discovery_option}" }.join(' ') %>"
<% end -%>

# Swarm discovery
<% docker_nodes = link('docker').instances.map {|i| "#{i.address}:4243"}.join(",") -%>
export SWARM_MANAGER_DISCOVERY="<%= p('swarm.discovery', docker_nodes) %>"

# Proxy configuration
<% if_p('env.http_proxy') do |http_proxy| -%>
export HTTP_PROXY="<%= http_proxy %>"
export http_proxy="<%= http_proxy %>"
<% end -%>
<% if_p('env.https_proxy') do |https_proxy| -%>
export HTTPS_PROXY="<%= https_proxy %>"
export https_proxy="<%= https_proxy %>"
<% end -%>
<% if_p('env.no_proxy') do |no_proxy| -%>
export NO_PROXY="<%= no_proxy %>"
export no_proxy="<%= no_proxy %>"
<% end -%>
