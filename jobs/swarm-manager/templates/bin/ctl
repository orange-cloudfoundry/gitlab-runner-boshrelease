#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status

# Setup common env vars and folders
source /var/vcap/packages/bosh-helpers/ctl_setup.sh 'swarm-manager'
export SWARM_MANAGER_PID_FILE=${SWARM_MANAGER_PID_DIR}/swarm-manager.pid

case $1 in

  start)
    pid_guard ${SWARM_MANAGER_PID_FILE} ${JOB_NAME}
    echo $$ > ${SWARM_MANAGER_PID_FILE}

    # Start Swarm Manager daemon
    exec /var/vcap/packages/swarm/bin/swarm \
        ${SWARM_MANAGER_DEBUG} \
        ${SWARM_MANAGER_LOG_LEVEL} \
        manage \
        --cluster-driver="swarm" \
        --host unix://${SWARM_MANAGER_PID_DIR}/swarm-manager.sock \
        ${SWARM_MANAGER_HOST} \
        ${SWARM_MANAGER_STRATEGY} \
        ${SWARM_MANAGER_FILTERS} \
        ${SWARM_MANAGER_REPLICATION} \
        ${SWARM_MANAGER_REPLICATION_TTL} \
        ${SWARM_MANAGER_ADVERTISE} \
        ${SWARM_MANAGER_HEARTBEAT} \
        ${SWARM_MANAGER_API_ENABLE_CORS} \
        ${SWARM_MANAGER_OVERCOMMIT} \
        ${SWARM_MANAGER_TLS} \
        ${SWARM_MANAGER_TLS_CACERT:-} \
        ${SWARM_MANAGER_TLS_CERT:-} \
        ${SWARM_MANAGER_TLS_KEY:-} \
        ${SWARM_MANAGER_TLS_VERIFY:-} \
        ${SWARM_MANAGER_DISCOVERY_OPTIONS:-} \
        ${SWARM_MANAGER_DISCOVERY} \
        >>${SWARM_MANAGER_LOG_DIR}/${OUTPUT_LABEL}.stdout.log \
        2>>${SWARM_MANAGER_LOG_DIR}/${OUTPUT_LABEL}.stderr.log
    ;;

  stop)
    # Stop Swarm Manager daemon
    kill_and_wait ${SWARM_MANAGER_PID_FILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
