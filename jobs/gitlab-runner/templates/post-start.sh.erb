#!/bin/bash

set -e

. "/var/vcap/jobs/gitlab-runner/config/environment.sh"

runuser -u vcap -- touch "${CONFIG_FILE}"

if runuser -u vcap -- /var/vcap/packages/gitlab-runner/bin/gitlab-runner register \
  --non-interactive \
  --config "${CONFIG_FILE}" \
  --name "${RUNNER_NAME}" \
  --executor "<%= p('runner.executor') %>" \
<% if p('runner.executor') == "docker" then -%>
  <% if p('runner.docker_privileged') then -%>
  --docker-privileged \
  <% end -%>
  --docker-image <%= p('runner.docker_image') %> \
  --docker-host <%= p('runner.docker_host') %> \
  <% if p('runner.docker_pull_policy_always') then -%>
  --docker-pull-policy="always" \
  <% end -%>
  <% if p('runner.docker_pull_policy_ifnotpresent') then -%>
  --docker-pull-policy="if-not-present" \
  <% end -%>
<% end -%>
  --url "<%= p('runner.registration.url') %>" \
<% if_p('runner.tags') do | tags | -%>
  --tag-list <%= tags.join(',') %> \
<% end -%>
<% if p('runner.allow_untagged') == true then -%>
  --run-untagged \
<% end -%>
  --builds-dir "${RUNNER_BUILDS_DIR}" \
  --cache-dir "${RUNNER_CACHE_DIR}" \
  --env http_proxy="<%= p('env.http_proxy', '') %>" \
  --env https_proxy="<%= p('env.https_proxy', '') %>" \
  --env no_proxy="<%= p('env.no_proxy', '') %>" \
  --env FF_GITLAB_REGISTRY_HELPER_IMAGE="<%= p('env.FF_GITLAB_REGISTRY_HELPER_IMAGE', '1') %>" \
  --token "<%= p('runner.registration.token') %>"
then
    sed -i \
        -e '/log_format/d' \
        -e '/log_level/d' \
        "${CONFIG_FILE}"

    sed -i \
        -e 's/concurrent *=.*/concurrent = <%= p("runner.concurrent") %>/g' \
        -e '/concurrent/alog_format = <%= p("runner.log_format", "json").to_json %>' \
        -e '/concurrent/alog_level = <%= p("runner.log_level", "info").to_json %>' \
        "${CONFIG_FILE}"

    runuser -u vcap -- /var/vcap/packages/gitlab-runner/bin/gitlab-runner restart || true
else >&2 echo "warning: gitlab-runner registration failed ($?)"
fi
